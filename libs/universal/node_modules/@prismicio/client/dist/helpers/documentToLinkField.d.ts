import type { FilledContentRelationshipField } from "../types/value/contentRelationship";
import type { PrismicDocument } from "../types/value/document";
type SetOptional<T, Keys extends keyof T> = Omit<T, Keys> & Partial<Pick<T, Keys>>;
/**
 * Converts a document into a link field, this is useful when crawling the API
 * for document links
 *
 * @typeParam TDocument - Specific interface of the provided document
 *
 * @param prismicDocument - A document coming from Prismic
 *
 * @returns The equivalent link field to use with `asLink()`
 *
 * @internal
 */
export declare const documentToLinkField: <TDocument extends SetOptional<PrismicDocument<Record<string, any>, string, string>, "slugs">>(prismicDocument: TDocument) => FilledContentRelationshipField<TDocument["type"], TDocument["lang"], TDocument["data"]>;
export {};
